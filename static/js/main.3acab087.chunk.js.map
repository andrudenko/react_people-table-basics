{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","motherLink","fatherLink","personSlug","name","sex","born","died","motherName","fatherName","slug","classNames","to","PeopleTable","people","map","find","mother","father","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useParams","useEffect","result","catch","finally","length","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3acab087.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  motherLink: Person | null,\n  fatherLink: Person | null,\n  personSlug: string,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  motherLink,\n  fatherLink,\n  personSlug,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      key={slug}\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {motherLink ? (\n          <NavLink\n            to={`/people/${motherLink.slug}`}\n            className=\"has-text-danger\"\n          >\n            {motherLink.name}\n          </NavLink>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {fatherLink ? (\n          <NavLink\n            to={`/people/${fatherLink.slug}`}\n          >\n            {fatherLink.name}\n          </NavLink>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n  personSlug: string,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, personSlug }) => {\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map((person: Person) => {\n            const motherLink = people\n              .find(mother => mother.name === person.motherName) || null;\n            const fatherLink = people\n              .find(father => father.name === person.fatherName) || null;\n\n            return (\n              <PersonLink\n                motherLink={motherLink}\n                fatherLink={fatherLink}\n                key={person.slug}\n                person={person}\n                personSlug={personSlug}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { personSlug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(result => setPeople(result))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {!isLoading && !people.length && isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && !isError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && people.length && !isError && (\n            <PeopleTable\n              people={people}\n              personSlug={personSlug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport './App.scss';\nimport {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"people\"\n            className={({ isActive }) => classNames('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}